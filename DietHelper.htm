<html>
<head>
<title>Diet Helper</title>
<meta name="viewport" content="width=device-width, initial-scale=1">

<script>

// --------------------
const globalDebug = 0;
// --------------------

const ingredients = { 
		// ------- FORMAT ---- optionValue : displayName, kCal/100g 
		// ------- ORDER ----- EMPTY MUST ALWAYS BE FIRST, others in ALPHABETICAL order

//  Prop_name      Display_Name     kcal		
	empty:        ["",                  0   ], 
	cacao:        ["Cacao",             3.75],
	latte:        ["Latte",            48   ],
	
};


const menu = {};
var i = 0;

var kCalDay = {
	breakfast: 0,
	snackM:    0,
	lunch:     0,
	snack2:    0,
	dinner:    0
}
	

function getValue(name) { return document.getElementById(name).textContent; }

function setValue(name, value) { return document.getElementById(name).textContent = value; }	
	



// reads ingredients list, appends all ingredients as options to dropdown menu
function buildList() {
	let select = document.createElement("select");
 
	for (let item in ingredients) {
		let option = document.createElement("option"); 
		option.innerHTML = ingredients[item][0];
		option.setAttribute("value", item);
		select.appendChild(option);
	}

	return select
}

function addRow(meal) {

	let parent = document.getElementById(meal);
	
	let line = document.createElement("div");
		line.setAttribute("class", "ingredient");
	
	let remove = document.createElement("button");
		remove.setAttribute("class", "minus");
		remove.setAttribute("onclick", "deleteRow()");
		remove.textContent = "x";
	
	let select = buildList();
		select.setAttribute("class", "vertCenter");
		select.setAttribute("onchange", "setIngredientProperties()");
	
	let iMass = document.createElement("span");
		iMass.setAttribute("class", "item_mass vertCenter unselectable");
		iMass.textContent = 20;
		iMass.setAttribute("onchange", "calculateIngredient()");  
		iMass.setAttribute("onclick", "setMass()");
	
	let uKcal = document.createElement("span");
		uKcal.setAttribute("class", "unit_kcal vertCenter unselectable");
		uKcal.textContent = 0;
	
	let iKcal = document.createElement("span");
		iKcal.setAttribute("class", "item_kcal vertCenter unselectable");	
		iKcal.textContent = 0;	
	
	parent.appendChild(line);
		line.appendChild(remove);
		line.appendChild(select);
		line.appendChild(iMass);
		line.appendChild(uKcal);
		line.appendChild(iKcal);
}

function deleteRow() {
	
	let check = window.confirm("Cancellare riga?") 

	if (!check) {return};
	
	let caller = event.currentTarget;
	let meal   = caller.parentNode.parentNode.parentNode.parentNode;
	let riga   = caller.parentNode;
	riga.parentNode.removeChild(riga);
	
	calculateMeal(meal);
}


function toggleBlock() {

	let caller = event.currentTarget;
	console.log(caller);
	
	let block  = caller.parentNode.querySelector(".meal_block");
	console.log(block);
	
	block.classList.toggle("hidden") ;
	event.currentTarget.querySelector(".arrow").classList.toggle("up");

}

function setIngredientProperties() {

	let caller     = event.currentTarget

	let chosenIngr = caller.value;
	let activeRow  = caller.parentNode;
	let baseKcal   = activeRow.querySelector(".unit_kcal");
	
	baseKcal.textContent = Math.round(ingredients[chosenIngr][1]);
	
	calculateIngredient(caller);
}

function setMass() {
	
	let caller = event.currentTarget;
	let meal   = caller.parentNode.parentNode.parentNode.parentNode;
	
	let value;
	let userInput = parseInt(prompt("Quantita':", ""), 10);
	
	userInput 
		? value = userInput
		: value = 0;
	
	caller.textContent = value;
	
	
	calculateIngredient(meal);
	
}

function calculateIngredient(eventCaller) {
	
	let caller;
	let meal; 
	
	eventCaller 
		? caller = eventCaller
		: caller = event.currentTarget;

	console.log(caller);
	meal = caller.parentNode.parentNode.parentNode.parentNode;
		
	let itemMass_id = caller.parentNode.querySelector(".item_mass");
	let unitKcal_id = caller.parentNode.querySelector(".unit_kcal");
	let itemKcal_id = caller.parentNode.querySelector(".item_kcal");
	
	mass = itemMass_id.textContent;
	kcal = unitKcal_id.textContent;
	
	itemKcal_id.textContent = Math.round(mass * kcal / 100); 
	
	calculateMeal(meal);
}


function calculateMeal(meal){

	let mealId;
	let mealKcalList;
	let mealKcalTot = 0;
	
	meal 
		? mealId = meal
		: mealId = event.parentNode.parentNode.parentNode.parentNode;
		
	console.log(mealId);
	
	mealKcalList = mealId.querySelectorAll(".item_kcal")
	//console.log(mealKcalList);
	
	mealKcalList.forEach(function(el){
		mealKcalTot += parseInt(el.textContent, 10);
	});
	
	mealId.querySelector(".meal_kcal").textContent = mealKcalTot;
	
	calculateDay();
}

function calculateDay() {

}


window.onload = function(){

	addRow("breakfast_list");
	addRow("breakfast_list");
	addRow("breakfast_list");
};

</script>

<style>

body {
	background-color: #666666;
	margin: 0px;
	padding: 0px;
	font-family: arial;
}

#container {
	box-sizing: border-box;
	width:100%;
	max-width:390px;
	margin: 5px;
	padding: 5px;
	border: 1px solid black;
}

.meal_group {
}

.meal_header, #app_header {
	font-weight: bold;
	height: 2em;
	display:flex;
	align-items: center;
	border: 2px solid black;
	border-radius: 1em;
	margin-top: 0.5em;
	margin-bottom: 0.5em;
	background-color: #fffff0;
}

#app_header {
	font-variant: small-caps;
}

.meal_name, #app_name {
	display: inline-block;
	margin-left: 1em;
	margin-right: 1em;
	flex-grow: 1;
}

#app_name {
	font-size: larger;
	color: green;
}

.arrow {
	width:  1.2em;
	height: 0.7em;
}

.up {
    -ms-transform: rotate(180deg); /* IE 9 */
    -webkit-transform: rotate(180deg); /* Safari */
    transform: rotate(180deg);
}

.ingredient {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
	height:2em;
	display:flex;
}

select {
	flex-grow: 1;
	box-sizing: border-box;
	display: inline-block;
	height: 1.6em;
	margin-top: auto;
	margin-bottom: auto;
	margin-left: 0.5em;
	margin-right: 0.5em;
}

.item_mass, .unit_kcal, .item_kcal, .meal_kcal, #day_kcal {
	box-sizing:border-box;
	display: flex;
	width: 3em;
	height: 1.5em;
	margin-left: 0.25em;
	margin-right:0.25em;
	padding-left:  2px;
	padding-right: 2px;
	border-width: 1px;
	border-style: solid; 
	border-radius: 1em;
	font-size: 16px;
	justify-content: flex-end;
	align-items: center;
}

.item_mass, select {
	background-color: #ffffaa;
}

.unit_kcal, .item_kcal, .meal_kcal, #day_kcal {
	background-color: #cccccc;
}

.item_mass, .unit_kcal, .item_kcal, .meal_kcal {
	border-color: black;
}

#day_kcal {
	border-color: green;
}


button {
	box-sizing: border-box; 
	border-width:2px;
	border-style: solid;

	padding:0px;
	text-align:center;
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}
	
.plus {
	border-color: green;
	border-radius: 0.75em;
	height: 1.5em;
	width:  4em;
	margin-left: 4em;
	background-color: #aaffaa;
}

.minus {
	border-color: red;
	border-radius: 50%;
	height: 1.5em;
	width:  1.5em;
	margin-top: auto;
	margin-bottom: auto;
	margin-right: 0.5em;
	background-color: #ffaaaa;
	color: red;
	font-size: 10px;	
}

.hidden {
	display: none;
}

.vertCenter {
	margin-top: auto;
	margin-bottom:auto;
}

.deleteRowIcon {
	height: 1.5em;
	width: 1.5em;
}

.arrow {
	width:  1.2em;
	height: 0.7em;
}

.up {
    -ms-transform: rotate(180deg); /* IE 9 */
    -webkit-transform: rotate(180deg); /* Safari */
    transform: rotate(180deg);
}

.unselectable {
	user-select: none;
	-moz-user-select: none;
	-webkit-user-select: none;
	-ms-user-select: none;
}

</style>


</head>


<body>


<div id="container">

	<div id="app_header">
		<div class="unselectable" id="app_name">Diet Helper</div>
		<div class="unselectable" id="day_kcal"></div>
	</div>

<!-- BREAKFAST -->
	<div class="meal_group" id="breakfast_group">
		<div class="meal_header" onclick="toggleBlock()">
			<div class="meal_name unselectable">
				<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="arrow up" x="0px" y="0px" viewBox="0 0 960 560" enable-background="new 0 0 960 560" xml:space="preserve">
					<path d="M480,344.181L268.869,131.889c-15.756-15.859-41.3-15.859-57.054,0c-15.754,15.857-15.754,41.57,0,57.431l237.632,238.937   c8.395,8.451,19.562,12.254,30.553,11.698c10.993,0.556,22.159-3.247,30.555-11.698l237.631-238.937   c15.756-15.86,15.756-41.571,0-57.431s-41.299-15.859-57.051,0L480,344.181z"/>
				</svg>
				Colazione
			</div>
			<div class="meal_kcal unselectable">0</div>
		</div>

		<div class="meal_block" id="breakfast_block">
			<div id="breakfast_list"></div>
			<button class="plus" onclick="addRow('breakfast_list')">+</button>
		</div>
	</div>

	
<!-- SNACK (MORNING)-->
	<div class="meal_group" id="snack1_group">
		<div class="meal_header" onclick="toggleBlock()">
			<div class="meal_name unselectable">
				<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="arrow up" x="0px" y="0px" viewBox="0 0 960 560" enable-background="new 0 0 960 560" xml:space="preserve">
					<path d="M480,344.181L268.869,131.889c-15.756-15.859-41.3-15.859-57.054,0c-15.754,15.857-15.754,41.57,0,57.431l237.632,238.937   c8.395,8.451,19.562,12.254,30.553,11.698c10.993,0.556,22.159-3.247,30.555-11.698l237.631-238.937   c15.756-15.86,15.756-41.571,0-57.431s-41.299-15.859-57.051,0L480,344.181z"/>
				</svg>
				Spuntino 1
			</div>
			<div class="meal_kcal unselectable">0</div>
		</div>

		<div class="meal_block" id="snack1_block">
			<div id="snack1_list"></div>
			<button class="plus" onclick="addRow('snack1_list')">+</button>
		</div>
	</div>
	

<!-- LUNCH -->	
	<div class="meal_group" id="lunch_group">
		<div class="meal_header" onclick="toggleBlock()">
			<div class="meal_name unselectable">
				<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="arrow up" x="0px" y="0px" viewBox="0 0 960 560" enable-background="new 0 0 960 560" xml:space="preserve">
					<path d="M480,344.181L268.869,131.889c-15.756-15.859-41.3-15.859-57.054,0c-15.754,15.857-15.754,41.57,0,57.431l237.632,238.937   c8.395,8.451,19.562,12.254,30.553,11.698c10.993,0.556,22.159-3.247,30.555-11.698l237.631-238.937   c15.756-15.86,15.756-41.571,0-57.431s-41.299-15.859-57.051,0L480,344.181z"/>
				</svg>
				Pranzo
			</div>
			<div class="meal_kcal unselectable">0</div>
		</div>

		<div class="meal_block" id="lunch_block">
			<div id="lunch_list"></div>
			<button class="plus" onclick="addRow('lunch_list')">+</button>
		</div>
	</div>
	

<!-- SNACK (AFTERNOON)-->	
	<div class="meal_group" id="snack2_group">
		<div class="meal_header" onclick="toggleBlock()">
			<div class="meal_name unselectable">
				<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="arrow up" x="0px" y="0px" viewBox="0 0 960 560" enable-background="new 0 0 960 560" xml:space="preserve">
					<path d="M480,344.181L268.869,131.889c-15.756-15.859-41.3-15.859-57.054,0c-15.754,15.857-15.754,41.57,0,57.431l237.632,238.937   c8.395,8.451,19.562,12.254,30.553,11.698c10.993,0.556,22.159-3.247,30.555-11.698l237.631-238.937   c15.756-15.86,15.756-41.571,0-57.431s-41.299-15.859-57.051,0L480,344.181z"/>
				</svg>
				Spuntino 2
			</div>
			<div class="meal_kcal unselectable">0</div>
		</div>

		<div class="meal_block" id="snack2_block">
			<div id="snack2_list"></div>
			<button class="plus" onclick="addRow('snack2_list')">+</button>
		</div>
	</div>
	

<!-- DINNER-->	
	<div class="meal_group" id="dinner_group">
		<div class="meal_header" onclick="toggleBlock()">
			<div class="meal_name unselectable">
				<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" class="arrow up" x="0px" y="0px" viewBox="0 0 960 560" enable-background="new 0 0 960 560" xml:space="preserve">
					<path d="M480,344.181L268.869,131.889c-15.756-15.859-41.3-15.859-57.054,0c-15.754,15.857-15.754,41.57,0,57.431l237.632,238.937   c8.395,8.451,19.562,12.254,30.553,11.698c10.993,0.556,22.159-3.247,30.555-11.698l237.631-238.937   c15.756-15.86,15.756-41.571,0-57.431s-41.299-15.859-57.051,0L480,344.181z"/>
				</svg>
				Cena
			</div>
			<div class="meal_kcal unselectable">0</div>
		</div>

		<div class="meal_block" id="dinner_block">
			<div id="dinner_list"></div>
			<button class="plus" onclick="addRow('dinner_list')">+</button>
		</div>
	</div>
	


</div> <!-- container -->

</body>
</html>
